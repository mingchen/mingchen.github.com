<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: shell | Ming's Blog]]></title>
  <link href="http://blog.chenming.info/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://blog.chenming.info/"/>
  <updated>2014-04-15T10:23:47-07:00</updated>
  <id>http://blog.chenming.info/</id>
  <author>
    <name><![CDATA[Ming]]></name>
    <email><![CDATA[chenming_cd@hotmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何在shell脚本中捕获并处理信号]]></title>
    <link href="http://blog.chenming.info/blog/2007/11/06/handle-signal-in-shell/"/>
    <updated>2007-11-06T20:55:00-08:00</updated>
    <id>http://blog.chenming.info/blog/2007/11/06/handle-signal-in-shell</id>
    <content type="html"><![CDATA[<p>有时候在执行shell脚本的时候需要处理用户的中断，比如<code>Ctrl+C</code>，
收到这种中断后需要清理资源，然后优雅的退出程序。</p>

<p>那么如何在shell脚本中捕获并处理信号呢？简单的说就是使用<code>trap</code>命令。</p>

<p>一个简单的示例：</p>

<pre><code>LOCKFILE=/sc_agent/agent_keepalive.log

# redirect stdout and stderr to $LOGFILE
LOGFILE=/sc_agent/agent_keepalive.log
exec 1&gt;&gt;$LOGFILE
exec 2&gt;&gt;$LOGFILE

# show current date in log
date


# signal handler
exit_handler()
{
  echo "Enter exit_handler"
  rm -f $LOCKFILE
}

# install signal handler
trap exit_handler SIGINT SIGTERM SIGQUIT

if [ -f $LOCKFILE ] ; then
  kill -0 $(cat $LOCKFILE)
  if [ $? -eq 0 ]; then
    # The process is running
    exit 1;
  fi
fi

# write my pid to $LOCKFILE
echo $$ &gt; $LOCKFILE
</code></pre>
]]></content>
  </entry>
  
</feed>
